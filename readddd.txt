15/2/24
So aaj i was working on creating Authentication on jo user email and password dalega and learned about JWt and Bcrypt k bhi multiple methods
Still understanding data jo hum thunder client mai enter krte is that data jo page ki body mai hoga and udhar se hum read krke compare krenge from database by taking this data and sending it to api and then api asking db and returning some ans and then this api telling us k if exist krta or not

->Vid 51
We're making a middleware. So basically ye ek aisi cheez hai jisko hum iss point pe isliye use krre so that hum user ka data access kar paaye from the jwt. So agar alag alag jagah par access karna hoga data tab again again same code likhne se accha hai ki ek MIDDLE WARE bnalo
->Middle ware ek function hoga jo tab call kra jayega jab user k Credentials ki need hogi
-> Okay so middle ware 3 cheezein use krta (req,res,next) -> req to vo hi k api se kuch req kro usmai kuch res kro but next is basically ki middleware k baad directly konsa function run hoga . for that see auth.js mai 3rd post endpoint. after the FETCHUSER middleware we directly goto async wala
-> 	1. SO in middle ware humne header se directly token request kra for particular user.
	2. uske baad jwt se verify krvaya token using the secret key and usse humein id return huyi and ye humne directly res.user mai store kri.
	3. now inside auth.js if res.user hum krenge then we directly get the id and then using that id we can access the data. EZEEE 

16/2/24
-> vid 52
OKay so ab we'll be working with New Api (Notes) and for that we'll be using Notes wala model and this will be used to fetch NOTES
1	->Sbse pehle we form a router to request data and ismai we use MIDDLEWARE that will be used to get id of user jisse uska data hum lee aaenge.
	->Yaad hai na middleware directly talks with an Router api in Auth.js and vo api directly has present user id in its HEADER so moj.

2	-> Okay So now hum apne Notes wale Schema mai user wala section add krenge which will show ki ye notes ye user se linked hai
	->And ye joh USER wala section hoga iska data hum directly User wale model se laaenge (kuch foreign key bola samajh nhi aaya) - Thoda research kar lena
	->Ab to access notes for a user humein Notes bhi toh add krne pdenge so we make an Endpoint jo for a particular user Notes add krega
	->Okay toh maine Endpoint create kra and ye endpoint k header mai ek token hoga which will be accessed using the MiddleWare and phir uske baad iss id,body.title,body.desc ka use krke mongo mai in Notes Db ye data store krenge and phir again api to respond krenge same data EZEEEE.
	-> bas phir ab sab chalra hai bhai..
	#### FLOWWWW ####             (joh abhi tak mujhe lag rha)
		1-> Phele (api pe) Screen pe user add krra apna data ie description,tag,title etc 
		2-> Phir ye through api db mai store hoga (notes.create)
		3-> Phir Db se respond aaega promise that has the data and vo phir hum res krenge through api and phir vo screen mai show hoga

->vid 53
Here we learned to Update the Note
	-> Sbse pehle we made a new end point for update and ismai directly in link humein note ki ID aati hai (Use Params)
	->Phir uske baad iss id se note find kro and uske baad check kro k aisa koi note bhi hai jiski id ye hai
	-> milgya then check if jo update karna chahta that is an authorized user
		->iske liye notes jo mile hai usmai we added userid wala part and also we gave Fetchuser(middleware) to this router.
		-> So user id from notes and fetchuser se user id ( produced from jwt) and then compare (agar sahi then we can update
	-> Okay so now humne bas update kra in DB using findByIdAndUpdate wala method which also returns a promise and boom hogya update....

NEVER THINK K SAB SAMAJH AAEGA EVERRR, JUST SEE THE FLOW UNDERSTAND IT AND GROW SLOWLY EZEEEEEEEEEEEEEEEEEE

19/02/24
->vid 54
Woohoooo so aaj maine khud Note delete krne wala code likha and the best part is that I even used **AI** to help me understand various coding partssss WOOOOWWW
	-> Okay so firstly i obv added a router that will have the endpoint connection.
	-> Now within the link we even passed a PARAM(parameter) that is basically the id of note to be deleted
	-> Now using the id we find note in DB and then using USERID in db we check if the valid user is trying to delete the note
	-> Bas phir we use a method provided by MONGODB itself and bas phir Delete krte node ko usinng its id

*OKAY FINALLY THE BACKEND IS KINDOF OVER AND NOW WE MOVE TO THE FRONTEND PART AND WILL BE WORKING AND SEEING KI KAISE YE ENDPOINTS BACKEND EVERYTHING MERGES WITH FRONTEND*

->VID 55
 //Backend and frontend sabmai apne packages.json hote hai 
 -->Installing React-router-dom and something known as concurrently. Dekhte kya hota hai

	CONCURRENTLY 
	-> Use krre nodemon aur react app sath sath chalane k liye. Haan alag alag powershells se bhi kaam ho jayega but why not.
	->Setup 
		1.Okay so we know ki backend is a folder jo main folder k andar hai mtlb jidhar react app uske andar
		2. So bas i package.json of outer react folder add this in scripts : "concurrently \"npm run start\" \"nodemon ./backend/index.js\" " EZEEEE***** 
		3. Remember to take double quotes as text inside JSON DOUBLE QUOTES we use \ - backslash before it. 

 ->Okay so bas code cleaning vgyara kri and dependencies install kri --> tailwind etc.

->VID 56
	->Kuch ni we took tailwind navbar
	->Uske baad again we saw ROUTER k andar alag alag ROUTES jiski apni apni ROUTE hoti hai and usmai jo path hai usse ek Linked element hota hai
	->And uske baad i even did one thing.
		-So aisa tha ki nav is fixed to its parent and uske peeche element of other component hide kar re thee so ab
		-sab  components mai ek top margin bnana hi hoga of some pixelll

->Vid 57
	->So basically we're dealing with a problem which is : ki bhai jaise ek component mai kuch bhejna hai using props toh uske parent grand parent k thorough
		- hi aa skta hai vo prop to that particular component and ye badi apps k time zyada hi complex hojata hai 
	->Thats why we use CONTEXT API
	->Ye bas REDUX jaisa hi hai ki ek GLOBAL STORE hai jo saari states handle krra and jisko apni state store update retrieve krni krte rhe easy
	->And aur kisko same state use krni huyi vo bhi kar skte

->Vid 58
	->ContextAPI implement kra 
	->	1. context ka birth kra in notecontext and vohi use hoga as provider and jab component mai access krna hoga tab bhi vohi use hoga
		2. okay phir humne State wala part bnaya jidhar hum states bnaenge and usko hum saare components pe share kar skte
		3. uske liye sbse pehle apko app.js(base js) mai haar attribute k top pe NoteState wala tag pelna hoga tab hi populate hoga context
		4. phir uss component k andar use context kro and access karlo joh bhi state access krni
        		// yaad rakhna ye jo provider k baad value={} likha hai na iske andar jo bhi hoga vo saare children acces kar skte
        		//jaise abhi name and update method hai toh ye aaram se sab access kar skte

	CRUX ->Notestate tag k under aane wale saare baccho ko ye value(Provider.v) free mai baanti jayegi (mtlb vo context.js jismai aap saare states etc implement krre)
	      -And bas Maze kro

20/02/24

->VID 59
	->SO basically we saw ki REact ROuter dwara provided useLocation Hook kaise kaam karta and kaise UseEFFEct kaam karta and kab kab vo work karta
	->useLocation basically uss component ki path provide karta as an object jo iss time pe active hai 
	->Use effect run hota for various fucntionalities eg. agar uske end mai sq brackets not given then vo baar baar render hoga
		- if bracket hai tab ek baar on refersh
		- if braket mai kuch hai eg. some variable or state tab vo tab hi render hoga jab ismai changes aaenge
->Vid 60
	->Kuch ni bas notes ko hardCode json mai paste kra so that we can work with the frontEnd and phir uske baad hum backend se connect honge
	->ab iss json ko context k through sabmein pass kra and also ek state isko update,retrieve and delete krne k liye bhi bnayi isse hi sab hoga

->Vid 61
	->OkAY so home mai we want to show user k notes so uske liye ek Component bnaya and iss componenet k andar multiple notes show honge
	->Now ye joh multiple notes hai vo show honge by using another component which will be called in Notes jiska naam hpga Noteitem
	->NoteItem - it is a single note ko card form mai show krne wala component
	->Bas so noteItem mai maine as a prop ek input lia note and display kra. (notes map krra values into NotesItem as a prop)
	->Flex wrap use krke show krdia sab kuch
	->Ezeee
		==> NEXT VIDEO MAI WE'LL BE ADDING UPDATE DELETE BUTTONS INTO EACH AND EVERY ITEM

->Vid 62
	->Icons put kre in each NoteItem and ab jaise hi delete ya update hoga then we'll show an alert!! (JOH HUM EK COMPONENT K FORM MAI BNAENGE)
	
->Vid 63
	->Yaad rakhna sab context se ho rha haiiii!!!
	->SO what we did is context mai ek function likha that will ADD DELETE AND UPDATE a note

   *==>ABHI HUM ADD KA USE KRENGE SO YES vo func likhenge abhi (Plus we also did some cleaning harr ek cheez ko apna component dia)
    ** SO WE"RE inside Add Note
	1. Obv sbse pehle context ki access do iss component ko as humein usmai ADDNOTE func chlana hai jo context mai pda hai in global store

	2. Add note k andar 2 methods bnaye and e.target.value set kri and phir we stored that input into another object named : note(state in Addnote.js)
	3. Phir submit par ek method hai usse we gave the objects->title,desc,tag to the addNote as arguments (addNotevohi so context se access kra)
	4. Phir inside that func in noteState(context) humne iss input se new object bnaya and uss objeect to purane notes k sth concat kra and phir SetNote chlaya(state)
		->Concat various ways se ho skta--> [...arrOfObj,newObj]      //aise new obj add hojata in arrOfObjs
		-> arrofObjs.concat(newObj)  aisa array k sath concat hoega and ye new array return krega . Iss returned array ko hum new dataArray set kar sakte
		->Jaise NoteState.js mai kra hai SetNode(concat)   ezeee. 
	**DEKH READ KRTE HUYE IT CAN BE A BIT CONFUSING BUT YOU KNOWW KYAKYA HORA AND WHAT IS THE FLOW
	**ALWAYS REMEMBER GO WITH THE FLOW AND WITH TIME YOU'LL JUST GROWWWWWW!!!!!

->Vid 64 (06-03-2024)
	->Now we'll be adding the delete fucntionality into the projectt
	-> So we know ki  Notes mai maine ek delete vala icon daala hai
	->Bas usmai jaise hi click hoga vaise hi delete krdo ( So obv ONCLICK Listener use hoga)

	->These are the steps
		1.Context mai ek del fucntion hai jo basically id lera hai particular note ki and id dekhkar note ko filter krra
		2. So onclick function add kra into the Trash Icon and phir uske baad del ko id provide kri particular note and done

->Vid 65 (06-03-2024)
	-> Now the main thing comes. We'll be using FetchApi to access data from the database that will be needed.
	->** So remember it is just a method to actually integrate FRONTEND with the BACKEND'
		->inside backend humne sbse pehle routes bnaye for particular task : 
			1. Auth == (a) user ko add kro into db and provide JWT Token 
				    (b) jab user login krra hoga then uske email ko search kro in (auth se connected db) and if password and email matches then good
			
			2. notes == (a) usmai hum user ka jo token hai (jo tab provide hoga jab bhi vo login krega) usko use krte to check if he is doing CRUD on iska token
					->and obv token is directly having the id of user and uss id se hum compare krte the note._id(user wali) and jwt wwali id
		
		-> So ab jab humne api's bnali toh ab hum frontend pe uss api ko kuch *headerfiles,body,method* provide krenge and phir
		 	->uske baad vo api uss data se db mai kuch cheezein kregi and phir hume respond kregi kuch (code mai likha hai backend k)
		
		-> Okay toh ab ek method ko explain krunga mai and vo hai (fetching all notes for particular jwt token(particular id))
			->1. ek function bnaya jo uss component mai call hoga which is used to map notes ( ie notes.js)
			->2. iss component mai useEffect bnaenge jo tab run hoga jab page refresh hoga
			->3. Okay and phir iss funcrion mai fetch krenge data by providing it the jwt and in backend
				-> jwt se id nikalenge and id se db mai data find krenge and jo related hoga vo api se front end ki ek state mai put hojaega
			->4. iss state ka data will be send to the component which is used to print all the data into the page and boom kaam done
		
		(bilkul aise hi saare Create, Update and Delete method use hora hai)

** yaad rakhna webd is google + flow + experience + projects + kuch bhi. So Ratna ni bas projects and basic pta hona chahiye****
	